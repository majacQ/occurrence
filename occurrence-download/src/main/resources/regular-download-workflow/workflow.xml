<?xml version="1.0" encoding="utf-8"?>
<workflow-app xmlns="uri:oozie:workflow:0.4.5" name="dev-regular-simple-avro-${table_name}-download-${download_key}">

  <global>
    <job-tracker>${hadoop.jobtracker}</job-tracker>
    <name-node>${hdfs.namenode}</name-node>
    <configuration>
      <property>
        <name>oozie.launcher.mapreduce.task.classpath.user.precedence</name>
        <value>true</value>
      </property>
      <property>
        <name>oozie.launcher.mapred.job.queue.name</name>
        <value>download-admin</value>
        <!-- What if there are lots of downloads running? -->
      </property>
      <property>
        <name>mapred.job.queue.name</name>
        <value>download-admin</value>
      </property>
    </configuration>
  </global>

  <start to="download_prepare"/>

  <action name="download_prepare">
    <java>
      <main-class>org.gbif.occurrence.download.oozie.DownloadPrepareAction</main-class>
      <arg>${wf:conf("gbif_filter")}</arg>
      <arg>${download_key}</arg>
      <capture-output/>
    </java>

    <ok to="simple_avro_download"/>
    <error to="kill"/>
  </action>

  <!--
    Prepare will mark the timestamp, snapshot the source HBase occurrence table into a snapshot using the timestamp
    and create the target table also using the timestamp.  The context params are returned for future actions to use
    the runtime specific values (e.g. snapshot name, directory, target tables etc).
  -->
  <action name="simple_avro_download">
    <sub-workflow>
      <app-path>${hdfs.namenode}/occurrence-download-workflows-${occurrence.environment}/download-workflow/simple-avro</app-path>
      <propagate-configuration/>
      <configuration>
        <property>
          <name>download_key</name>
          <value>${wf:actionData('download_prepare')['download_key']}</value>
        </property>
        <property>
          <name>is_small_download</name>
          <value>${wf:actionData('download_prepare')['is_small_download']}</value>
          <!-- Should be false -->
        </property>
        <property>
          <name>download_table_name</name>
          <value>${wf:actionData('download_prepare')['download_table_name']}</value>
        </property>
        <property>
          <name>table_name</name>
          <value>${wf:actionData('download_prepare')['table_name']}</value>
        </property>
        <property>
          <name>hive_query</name>
          <value>${wf:actionData('download_prepare')['hive_query']}</value>
        </property>
        <property>
          <name>hive_db</name>
          <value>${wf:actionData('download_prepare')['hive_db']}</value>
        </property>
      </configuration>
    </sub-workflow>
    <ok to="end"/>
    <error to="kill"/>
  </action>

  <kill name="kill">
    <message>Regular occurrence (SIMPLE_AVRO) download failed: [${wf:errorMessage(wf:lastErrorNode())}]</message>
  </kill>

  <end name="end" />

</workflow-app>
